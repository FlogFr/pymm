#!/usr/bin/env python

import argparse
from pprint import pprint

_AVAILABLE_COMMANDS=[
    'check_database',
]

_DB_VARIABLE_ENV_NAME='DBPASSWORD'

_DESCRIPTION='''
Pymm binary

In order to be fully secured, Pymm command gets Postgresql password from
the environment variable "{}" by default. You can change it with
the --dbpassword.
'''.format(_DB_VARIABLE_ENV_NAME)

def main(*args, **kwargs):
    pprint('run main with {} and {} '.format(args, kwargs))

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description=_DESCRIPTION,
        epilog='License CC 2016-present - @aRkadeFR',
        add_help=False,
    )
    parser.add_argument('--help',
                        action='help')
    parser.add_argument('command',
                        action='store',
                        choices=_AVAILABLE_COMMANDS,
                        help='Pymm command to run on the database')
    parser.add_argument('-D', '--database',
                        dest='dbname',
                        action='store',
                        help='Database to connect to')
    parser.add_argument('-U', '--user',
                        dest='dbuser',
                        action='store',
                        help='User to connect to the database')
    parser.add_argument('--dbpasswordenvname',
                        dest='dbpasswordenvname',
                        action='store',
                        default=_DB_VARIABLE_ENV_NAME,
                        help='Environment variable name to fetch for Postgres password')
    parser.add_argument('-h', '--host',
                        dest='dbhost',
                        action='store',
                        help='Host of the database to connect to')
    parser.add_argument('-p', '--port',
                        dest='dbport',
                        action='store',
                        help='Port of the database to connect to')
    parser.add_argument('-v', '--verbose',
                        action='store_true',
                        dest='verbose',
                        help='Verbosity of Pymm command')
    arguments = parser.parse_args()

    # go to pymm logic's
    main(**vars(arguments))
